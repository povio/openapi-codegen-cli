{{! Js docs }}
{{{genQueryJsDocs endpoint query=true}}}
{{! Query definition}}
export const {{queryName endpoint}} = <TData>({{#if (endpointParams endpoint)}}{ {{{endpointArgs endpoint}}} }: { {{{genEndpointParams endpoint}}} }, {{/if}}options?: AppQueryOptions<typeof {{importedEndpointName endpoint}}, TData>{{#if hasAxiosRequestConfig}}, {{axiosRequestConfigName}}?: {{axiosRequestConfigType}}{{/if}}) => {
  {{! Use acl check }}
  {{#if hasAclCheck}}const { checkAcl } = {{aclCheckHook}}();{{/if}}
  
  return {{queryHook}}({
    queryKey: keys.{{endpointName endpoint}}({{#if (endpointParams endpoint)}}{{{endpointArgs endpoint}}}{{/if}}),
    queryFn: {{#if hasQueryFn}}() => {{#if hasQueryFnBody}}{ {{/if}} 
    {{#if hasAclCheck}}{{{genAclCheckCall endpoint}}}{{/if}}
    {{#if hasQueryFnBody}}return {{/if}}{{importedEndpointName endpoint}}({{{endpointArgs endpoint}}}{{#if hasAxiosRequestConfig}}{{#if (endpointArgs endpoint)}}, {{/if}}{{axiosRequestConfigName}}{{/if}}){{else}}{{importedEndpointName endpoint}}{{/if}}
    {{#if hasQueryFnBody}} }{{/if}},
    ...options,
  });
};